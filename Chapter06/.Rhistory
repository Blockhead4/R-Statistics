s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
s
s <- seq(-7, 10, by=0.001)
s.z <- dnorm(s, mean=1.5, sd=2)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
points(2, -0.005, pch=17, col="blue")
text(2, 0.0055, "2", col="blue")
points(3, -0.005, pch=17, col="blue")
text(3, 0.0055, "3", col="blue")
s <- seq(-7, 10, by=0.001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
head(s)
tail(s)
head(s.z)
tail(s.z)
s.z <- c(0, s.z, 0)
head(s)
head(s.z)
tail(s.z)
polygon(s, s.z, col="red", density=10, angle=305)
s <- seq(-7, 10, by=0.00001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
points(2, -0.005, pch=17, col="blue")
text(2, 0.0055, "2", col="blue")
points(3, -0.005, pch=17, col="blue")
text(3, 0.0055, "3", col="blue")
s <- seq(-7, 10, by=0.00001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
s.z <- c(0, s.z, 0)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
points(2, -0.005, pch=17, col="blue")
text(2, 0.0055, "2", col="blue")
points(3, -0.005, pch=17, col="blue")
text(3, 0.0055, "3", col="blue")
s <- seq(-7, 10, by=0.00001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
s <- seq(-7, 10, by=0.00001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(0, s, 1)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
s <- seq(-7, 10, by=0.001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(0, s, 1)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
s <- seq(-7, 10, by=0.001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(0, s, 1)
s.z <- c(0.000001, s.z, 0.000001)
polygon(s, s.z, col="red", density=10, angle=305)
# 그래프
x <- seq(-7, 10, by=0.001)
x.p <- dnorm(x, 1.5, 2)
plot(x, x.p, axes=F, type="l", main="N(1.5, 2)", ylab="")
axis(1)
lines(c(-7, 10), c(0, 0))
points(0, -0.005, pch=17, col="blue")
text(0, 0.0055, "0", col="blue")
points(1, -0.005, pch=17, col="blue")
text(1, 0.0055, "1", col="blue")
points(2, -0.005, pch=17, col="blue")
text(2, 0.0055, "2", col="blue")
points(3, -0.005, pch=17, col="blue")
text(3, 0.0055, "3", col="blue")
s <- seq(-7, 10, by=0.001)
s.z <- dnorm(s, mean=1.5, sd=2)
s <- c(2, s, 3)
s.z <- c(0, s.z, 0)
polygon(s, s.z, col="red", density=10, angle=305)
# Chi(df = k). mean: k, sd: sqrt(2*k/n)
par(mfrow=c(2,2))
hist(chi.4.mean, prob=TRUE, main="표본 크기: 4", col="orange", border="red")
x1 <- seq(min(chi.4.mean), max(chi.4.mean), length=1000)
y1 <- dnorm(x=x1, mean=1, sd=sqrt(2/4))
lines(x1, y1, lty=2, col="blue")
hist(chi.12.mean, prob=TRUE, main="표본 크기: 12", col="orange", border="red")
x2 <- seq(min(chi.12.mean), max(chi.12.mean), length=1000)
y2 <- dnorm(x=x2, mean=1, sd=sqrt(2/12))
lines(x2, y2, lty=2, col="blue")
hist(chi.128.mean, prob=TRUE, main="표본 크기: 128", col="orange", border="red")
x3 <- seq(min(chi.128.mean), max(chi.128.mean), length=1000)
y3 <- dnorm(x=x3, mean=1, sd=sqrt(2/128))
lines(x3, y3, lty=2, col="blue")
hist(chi.512.mean, prob=TRUE, main="표본 크기: 512", col="orange", border="red")
x4 <- seq(min(chi.512.mean), max(chi.512.mean), length=1000)
y4 <- dnorm(x=x4, mean=1, sd=sqrt(2/512))
lines(x4, y4, lty=2, col="blue")
# 2) 자유도의 크기에 따른 Chisqure 분포 차이
set.seed(9)
mean.seq <- function(x) {
n <- length(x)
sum <- 0
n2 <- 0
for(i in 1:n) {
newx <- i + x[i]
sum <- sum + newx
n2 <- n2 + i
}
return(sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
n1 <- length(y1[(y1 > -0.1]) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1]) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1]) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1]) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1]) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1]) & (y2 < 0.1)])
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1,2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3)", xlab="", col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+3*x3)/6", xlab="", col="orange", border="red")
# Y1bar 을 구하기 위한 함수
mean.seq <- function(x) {
n <- length(x)
sum <- 0
n2 <- 0
for(i in 1:n) {
newx <- i + x[i]
sum <- sum + newx
n2 <- n2 + i
}
return(sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1,2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3", xlab="", col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+3*x3)/6", xlab="", col="orange", border="red")
# Y1bar 을 구하기 위한 함수
mean.seq <- function(x) {
n <- length(x)
sum <- 0
n2 <- 0
for(i in 1:n) {
newx <- i * x[i]
sum <- sum + newx
n2 <- n2 + i
}
return(sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1,2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3", xlab="", col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+3*x3)/6", xlab="", col="orange", border="red")
options(digits=3)
set.seed(1)
mean.seq <- function(x) {
n <- length(x)
sum <- 0
n2 <- 0
for(i in 1:n) {
newx <- i * x[i]
sum <- sum + newx
n2 <- n2 + i
}
return(sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep(NA, 1000)
for(i in 1:1000) {
smp <- rnorm(3)
y1[i] <- mean(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length(y1[(y1 > -0.1) & (y1 < 0.1)])
n2 <- length(y2[(y2 > -0.1) & (y2 < 0.1)])
data.frame(mean=mean(y1), var=var(y1), n=n1)
data.frame(mean=mean(y2), var=var(y2), n=n2)
par(mfrow=c(1,2))
hist(y1, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(x1+x2+x3)/3", xlab="", col="orange", border="red")
hist(y2, probability = T, xlim=c(-2, 2), ylim=c(0, 0.65),
main="(1*x1+2*x2+3*x3)/6", xlab="", col="orange", border="red")
# 1) 유효성
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, se=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.08), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 1) 유효성
par(mfrow=c(1,1))
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, se=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.08), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 2) 유효성 모의실험
# Y1bar 을 구하기 위한 함수
options(digits=3)
# 1) 유효성
par(mfrow=c(1,1))
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, se=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.8), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 1) 유효성
par(mfrow=c(1,1))
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, se=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.8), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 1) 유효성
par(mfrow=c(1,1))
x <- seq(-3, 3, by=0.01)
y <- dnorm(x)
y.1 <- dnorm(x, sd=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type="l", ylim=c(0, 0.8), axes=F, ylab="", lwd=3, col="yellow")
lines(x, y.1, col="red", lwd=3)
lines(x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 3) 모비율에 대한 점추정
library(prob)
n <- 3
smps.all <- rolldie(n)
str(smps.all)
source('D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter05/ch05_1_scripts.R', encoding = 'UTF-8', echo=TRUE)
mean(phat)
n <- 3
smps.all <- rolldie(n)
str(smps.all)
head(smps.all, n=3)
is.even <- function(x) return(!x%%2)
var.p <- function(x) {
return(sum((x-mean(x)^2)/length(x)))
}
p.even <- function(x, s.size=3) {
return(sum(is.even(x))/s.size)
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
(p.p <- 0.5)
var.p(phat)
(p.p*(1-p.p)/3)
sqrt(var.p(phat))
str(smps.all)
head(smps.all, n=3)
is.even(2)
1-2^
1-2^2
1-2^2
1-2^2
phat
mean(phat)
(p.p <- 0.5)
var.p(phat)
(p.p*(1-p.p)/3)
sqrt(var.p(phat))
set.seed(9)
n <- 1-
n <- 10
x <- 1:100
y <- (-3, 3, by=0.01)
smps <- matrix(rnorm(n*length(x)), ncol=n)
xbar <- apply(smps, 1, mean)
se <- 1/sqrt(10)
alpha <- 0.05
z <- qnorm(1 - alpha/2)
ll <- xbar - z*se
ul <- xbar + z*se
plot(y, type="n", xlab="trial", ylab="z",
main="95% Confidence Interval for Population mean",
xlim=c(1,100), ylim=c(-1.5, 1.5), cex.lab=1.8)
abline(h=0, col="red", lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll * ul > 0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code=3, angle=90, length=0.02, col=l.c, lwd=1.5)
# 4) 모평균에 대한 95% 신뢰구간
par(mfrow=c(1,1))
set.seed(9)
n <- 10
x <- 1:100
y <- (-3, 3, by=0.01)
smps <- matrix(rnorm(n*length(x)), ncol=n)
xbar <- apply(smps, 1, mean)
se <- 1/sqrt(10)
alpha <- 0.05
z <- qnorm(1 - alpha/2)
ll <- xbar - z*se
ul <- xbar + z*se
plot(y, type="n", xlab="trial", ylab="z",
main="95% Confidence Interval for Population mean",
xlim=c(1,100), ylim=c(-1.5, 1.5), cex.lab=1.8)
abline(h=0, col="red", lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll * ul > 0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code=3, angle=90, length=0.02, col=l.c, lwd=1.5)
qt(0.025, 4)
qt(0.025, 30)
qt(0.025, 31)
qt(0.025, 35)
qt(0.025, 100)
qt(0.025, 200)
qt(0.025, 300)
qt(0.025, 500)
qt(0.025, 400)
qt(0.025, 500)
qnorm(0.025)
qnorm(0.025, 0, 1)
qnorm(0.025)
t <- qt(1-(alpha/2), df=n-1)
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
# 5) 모평균에 대한 95% 신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s/sqrt(n))
ul <- m + t * (s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower Limit", "Mean", "Upper Limit")
return(ci)
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
# 5) 모평균에 대한 95% 신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha=0.05) {
n <- length(x)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s/sqrt(n))
ul <- m + t * (s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower Limit", "Mean", "Upper Limit")
return(ci)
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
# 5) 모평균에 대한 95% 신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha=0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s/sqrt(n))
ul <- m + t * (s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower Limit", "Mean", "Upper Limit")
return(ci)
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
# 5) 모평균에 대한 95% 신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha=0.05) {
n <- length(x)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t * (s/sqrt(n))
ul <- m + t * (s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower Limit", "Mean", "Upper Limit")
return(ci)
}
smp <- c(520, 498, 481, 512, 515, 542, 520, 518, 527, 526)
ci.t(smp)
ci.t(smp, 0.1)
ci.t(smp, alpha=0.1)
# 6장 준비
data <- read.csv("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter06/data/2010_6th.csv")
str(data)
head(data)
# 6장 준비
data <- read.csv("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter06/data/2010_6th.csv")
# 6장 준비
setwd("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter06")
data <- read.csv("data/2010_6th.csv")
str(data)
