result <- c(result, a)
}
return(result)
}
number_generator(2, 5)
number_generator(4, 4)
number_generator <- function(x, n) {
result <- c()
for(i in 1:n) {
result <- c(result, x * i)
}
return(result)
}
number_generator(4, 4)
number_generator <- function(x, n) {
result <- c()
for(i in 1:n) {}
append(result, x*i)
}
number_generator <- function(x, n) {
result <- c()
for(i in 1:n) {
append(result, x*i)
}
return(result)
}
number_generator(4, 4)
result <- c()
append(result, 10)
append(result, 10)
number_generator <- function(x, n) {
result <- c()
for(i in 1:n) {
result <- append(result, x*i)
}
return(result)
}
number_generator(4, 4)
defaverage <- function(list) {
return(mean(list))
}
list = c(5,3,4)
defaverage(list)
list = c(3)
defaverage(list)
list = c(3,2)
defaverage(list)
mylist <- c(1:5)
mylist
mylist <- list(c(1:5))
mylist
mylist - min(mylist)
mylist[1]
grep(min(mylist), mylist)
str_remove(mylist, min(mylist))
min(mylist)
split(mylist, sep=" ")
?split
factor(mylist)
mylist <- list(c(1:5))
factor(mylist)
factor(mylist)[1]
factor(mylist)[2]
mylist <- list(c(1:5))
mylist
min(levels(mylist))
levels(mylist)
factor(mylist)
levels(mylist)
factor(mylist)
min(levels(factor(mylist)))
levels(factor(mylist))
mylist
mylist <- c(1:5)
mylist
mylist <- c(1,2,3,4,5)
mylist
mylist[1]
mylist[2]
mylist <- list(c(1,2,3,4,5))
mylist[2]
mylist <- c(1,2,3,4,5))
mylist <- c(1,2,3,4,5)
min(mylist)
mylist- min(mylist)
grep(min(mylist), mylist)
grep(min(mylist), mylist, value=T)
a<-grep(min(mylist), mylist, value=T)
mylist[-a]
a<-grep(min(mylist), mylist)
mylist[-a]
rm_small <- function(mylist) {
num <- grep(min(mylist), mylist)
mylist[-num]
}
rm_small(mylist)
mylist <- c(10,200,8)
rm_small(mylist)
mylist <- c(10)
rm_small(mylist)
rm_small <- function(mylist) {
num <- grep(min(mylist), mylist)
toString(mylist[-num])
}
mylist <- c(10)
rm_small(mylist)
mylist <- c(10,22, 8)
rm_small(mylist)
oddSum <- function(num) {
sum <- 0
for(i in seq(1, num, 2)) {
sum <- sum + i
}
return(sum)
}
oddSum(100)
v1 <- c("강경학", "김태균", "이성열", "정은원")
v2 <- c(90, 78, 94, 70)
v3 <- c(50, 60, 90, 92)
df_score <- data.frame(이름=v1, 중간=v2, 기말=v3)
df_score
df_score$평균 <- NA
for(i in 1:nrow(df_score)) {df_score$평균[i] <- mean(c(df_score$중간[i], df_score$기말[i]))}
df_score
df_score <- df_score %>% mutate(평균=(df_score$중간+df_score$기말)/2)
df_score
# 3. 2번 문제에 학점이라는 필드를 만들고, 평균 성적에 따라 학점을 부여하시오.
df_score$학점 <- ""
df_score
df_score %>%
mutate(학점 = ifelse(dfscore$평균 >= 90, "A",
ifelse(dfscore$평균 >= 80, "B",
ifelse(dfscore$평균 >= 70, "C",
ifelse(dfscore$평균 >= 60, "D", "F")))))
v1 <- c("강경학", "김태균", "이성열", "정은원")
v2 <- c(90, 78, 94, 70)
v3 <- c(50, 60, 90, 92)
df_score <- data.frame(이름=v1, 중간=v2, 기말=v3)
df_score
df_score <- df_score %>% mutate(평균=(df_score$중간+df_score$기말)/2)
df_score
# Test 1
library(dplyr)
library(ggplot2)
df_score <- df_score %>% mutate(평균=(df_score$중간+df_score$기말)/2)
df_score
df_score %>%
mutate(학점 = ifelse(dfscore$평균 >= 90, "A",
ifelse(dfscore$평균 >= 80, "B",
ifelse(dfscore$평균 >= 70, "C",
ifelse(dfscore$평균 >= 60, "D", "F")))))
df_score
df_score %>%
mutate(학점 = ifelse(dfscore$평균 >= 90, "A",
ifelse(dfscore$평균 >= 80, "B",
ifelse(dfscore$평균 >= 70, "C",
ifelse(dfscore$평균 >= 60, "D", "F")))))
df_score %>%
mutate(학점 = ifelse(df_score$평균 >= 90, "A",
ifelse(df_score$평균 >= 80, "B",
ifelse(df_score$평균 >= 70, "C",
ifelse(df_score$평균 >= 60, "D", "F")))))
# 1) "setosa" 종 Sepal.Width의 Box Plot을 그려 이상치를 확인할 것
data1 <- select(subset(iris, Species == "setosa"), Sepal.Width)
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
# 1) "setosa" 종 Sepal.Width의 Box Plot을 그려 이상치를 확인할 것
data1 <- select(subset(iris, Species == "setosa"), Sepal.Width)
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) + geom_boxplot()
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
summarise(max_average = max(average)) %>%
arrange(desc(max_average)) %>%
head(3)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
head(3)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
summarise(avg = mean(average)) %>%
arrange(desc(avg)) %>%
head(3)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
summarise(max_average = max(average)) %>%
arrange(desc(max_average)) %>%
head(3)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
summarise(max_average = max(average)) %>%
arrange(desc(max_average)) %>%
head(10)
top3
top3 <- mpg %>%
filter(manufacturer=="toyota") %>%
group_by(manufacturer, model) %>%
mutate(average=(cty+hwy)/2) %>%
summarise(avg = mean(average)) %>%
arrange(desc(avg)) %>%
head(10)
top3
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV Manufacturer") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, size=10))
suv7 <- mpg %>%
filter(class=="suv") %>%
group_by(manufacturer) %>%
summarise(average_cty=mean(cty)) %>%
arrange(desc(average_cty)) %>%
head(7)
suv7
ggplot(suv7, aes(x=reorder(manufacturer, -average_cty),
y=average_cty, fill=manufacturer)) +
geom_bar(stat="identity") +
theme_light() +
ggtitle("시내연비 TOP7 SUV Manufacturer") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, size=10))
# 1) clarity 의 돗수를 보여주는 그래프
d <- diamonds %>%
group_by(clarity) %>%
summarise(count = n()) %>%
arrange(count)
d
ggplot(d, aes(x=clarity, y=count, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
# 2) clarity에 따른 가격의 변화를 보여주는 그래프
d2 <- diamonds %>%
group_by(clarity) %>%
summarise(average_price = mean(price)) %>%
arrange(average_price)
d2
ggplot(d2, aes(x=clarity, y=average_price, fill=clarity)) + geom_histogram(stat="identity", position = "dodge") +
theme_light() +
ggtitle("clarity * price") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14))
# 1) OPS(출루율+장타율)와 연봉대비 OPS(OPS/연봉*100)를 구하시오
b <- read.csv("data/야구성적.csv")
b1 <- b %>%
mutate(OPS = 출루율+장타율) %>%
mutate(연봉대비OPS = OPS/연봉*100)
# mutate(OPS = 출루율+장타율, 연봉대비OPS = OPS/연봉*100)
select(b1, 선수명, OPS, 연봉대비OPS)
# 2) 연봉대비OPS를 선수별로 비교할 수 있는 막대그래프
ggplot(b1, aes(x=선수명, y=연봉대비OPS, fill=선수명)) + geom_bar(stat="identity") +
theme_light() +
ggtitle("선수별 연봉대비OPS") +
theme(plot.title = element_text(hjust=0.5, face="bold", size=14)) +
theme(axis.text.x = element_text(hjust=1, vjust=1, angle = 45, size=10))
a <- c(1:5)
library(stringr)
str_remove(a, min(a))
gsub(min(a), NA, a)
is.na(a)
!is.na(a)
is.na(a)
?is.na
a
is.na(b)
b <- gsub(min(a), NA, a)
is.na(b)
return(!is.na(b))
rm_small <- function(mylist) {
return(!is.na(gsub(min(mylist), NA, mylist)))
}
mylist <- c(1:5)
rm_small(mylist)
return(!is.na(gsub(min(mylist), NA, mylist), value=T))
rm_small <- function(mylist) {
toString(mylist[-grep(min(mylist), mylist)])
}
mylist <- c(10,22, 8)
rm_small(mylist)
rm_small <- function(mylist) {
mylist[-grep(min(mylist), mylist)]
}
mylist <- c(10,22, 8)
rm_small(mylist)
# 10.
grep(min(mylist), mylist)
evenOrOdd <- function(num) {
ifelse(num %% 2 == 0, "Even", "Odd")
}
num <- 2
evenOrOdd(2)
evenOrOdd(num)
num <- 3
evenOrOdd(num)
evenOrOdd <- function(num) {
ifelse(num < 0, "양의 정수를 입력하시오.",
ifelse(num %% 2 == 0, "Even", "Odd"))
}
num <- 0
evenOrOdd(num)
evenOrOdd <- function(num) {
ifelse(num < 0, "양의 정수를 입력하시오.",
ifelse(num %% 2 == 0, "Even", "Odd"))
}
num <- 0
evenOrOdd <- function(num) {
ifelse(num <= 0, "양의 정수를 입력하시오.",
ifelse(num %% 2 == 0, "Even", "Odd"))
}
num <- 0
evenOrOdd(num)
num <- 1
evenOrOdd(num)
num <- 4
evenOrOdd(num)
findKim <- function(seoul) {
return(paste("김서방은 ", grep("Kim", seoul), "에 있다"))
}
seoul <- c("tod", "Kim", "kid")
findKim(seoul)
nextSqaure <- function(n) {
ifelse(sqrt(n) > 0, (n+1)^2, "no")
}
nextSqaure(2)
nextSqaure <- function(n) {
ifelse(is.integer(sqrt(n)), (n+1)^2, "no")
}
nextSqaure(2)
nextSqaure(4)
sqrt(4)
a <- 4
class(a)
typeof(a)
is.integer(4)
is.numeric(4)
a <- integer(4)
nextSqaure(4)
nextSqaure(a)
class(a)
typeof(a)
a
sqrt(2)
is.numeric(sqrt(2))
as.integer(4)
is.integer(as.integer(4))
nextSqaure <- function(as.integer(n)) {
ifelse(is.(sqrt(n)), (n+1)^2, "no")
}
nextSqaure <- function(n) {
ifelse(is.(sqrt(n)), (n+1)^2, "no")
}
n <- as.integer(3)
nextSqaure(3)
is.integer(sqrt(4))
is.integer(sqrt(as.integer(4)))
is.integer(as.integer(4))
is.integer(sqrt(as.integer(4)))
sqrt(as.integer(4))
class(sqrt(as.integer(4)))
typeof(sqrt(as.integer(4)))
sqrt(2)
sqrt(as.integer(2))
class(sqrt(as.integer(2)))
as.integer(sqrt(2))
is.wholenumber(1)
.Machine$double.eps^0.5
ggplot(data1, aes(x="", y=Sepal.Width)) +
stat_boxplot(geom = "errorbar", width=0.5) +
geom_boxplot()
# 1) "setosa" 종 Sepal.Width의 Box Plot을 그려 이상치를 확인할 것
data1 <- select(subset(iris, Species == "setosa"), Sepal.Width)
data1
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) +
stat_boxplot(geom = "errorbar", width=0.5) +
geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) +
stat_boxplot(geom = "errorbar", width=0.5) +
geom_boxplot()
boxplot(data1, col="pink", main="Setosa - Sepal.Width Box Plot")
ggplot(data1, aes(x="", y=Sepal.Width)) +
stat_boxplot(geom = "errorbar", width=0.5) +
geom_boxplot()
sqrt(2)
round(sqrt(2))
ceiling(sqrt(2))
ceiling(2)
ceiling(2)-
ceiling(sqrt(2))-sqrt(2)
data1
ceiling(sqrt(2))
sqrt(2)
ceiling(2)-
ceiling(sqrt(2))-sqrt(2)
2-sqrt(2)
ceiling(sqrt(2))
sqrt(2)
ceiling(2)-
ceiling(sqrt(2))-sqrt(2)
ceiling(sqrt(2))-sqrt(2)
1e-10
2> 1e-10
2 < 1e-10
nextSqaure <- function(n) {
ifelse(ceiling(sqrt(n)) - sqrt(n) < 1e-10, (n+1)^2, "no")
}
n <- as.integer(3)
n <- 3
nextSqaure(n)
n <- 4
nextSqaure(n)
?seq
seq(1, 30, length.out = 30)
seq(1, 2, length.out = 30)
seq(-3, 3, along.with = 30)
x <- c(1,2,3,4,5)
x <- c(1,2,3,4,5); x
x <- factor(x, levels=c(1:4))
x <- factor(x, levels=c(1:4))
x
x <- factor(x, levels=c(1:4), labels=c("a", "b", "c", "d"))
x
x <- factor(x, levels=c(1:4), labels=c("a", "b", "c", "d"), ordered = T)
x
x[x>2.1]
a <- seq(-3, 3, along.with = 30)
a[x>2.1]
a <- seq(-3, 3, along.with = 30)
a[x>2.1]
a <- seq(1, 2, length.out = 30)
a[x>0.1]
a <- seq(1, 2, length.out = 30)
a[a>0.1]
a[a>0.1]
week <- factor(c(1:7), levels=c(1:7), labels=c("일", "월", "화", "수", "목", "금", "토"), ordered=T)
week
name <- c("철수", "영희", "길동")
age <- c(21, 20, 31)
gender <- factor(c("M", "F", "A"))
character <- data.frame(name, age, gender)
str(character)
character
character$age
character$gender
name <- c("철수", "영희", "길동")
age <- c(21, 20, 31)
gender <- factor(c("M", "F", "M"))
character <- data.frame(name, age, gender)
str(character)
character
character$name
# 2장
setwd("D:\Workspace-JWP\R_Data_Analysis\R-Statistics")
# 2장
setwd("D:/Workspace-JWP/R_Data_Analysis/R-Statistics")
data <- read.csv("2010년 인구사항.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor(data$V1, levels=c(1,2), labels = c("남자", "여자"))
data$V1
data$V3 <- factor(data$V3, levels=1:14, labels=c("가구주", "가구주의 배우자", "자녀",
"자녀의 배우자", "가구주의 부모", "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모, 형제자매, 그 배우자",
"형제자매의 자녀, 그 배우자", "부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람"))
data$V3 <- factor(data$V3, levels=1:14, labels=c("가구주", "가구주의 배우자", "자녀",
"자녀의 배우자", "가구주의 부모", "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모", "형제자매, 그 배우자",
"형제자매의 자녀, 그 배우자", "부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람"))
data$V4 <- factor(data$V4, levels=1:8, labels=c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정", "박사과정"))
str(data)
head(data)
save.image("data.rda")
