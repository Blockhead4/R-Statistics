for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i) }
gcd <- ifelse(length(an) <= length(bn), max(subset(an, an %in% bn)), max(subset(bn, bn %in% an)))
ad <- a/maxn
bd <- b/maxn
lcm <- ad*bd*maxn
return(c(gcd, lcm))
}
a <- 24
b <- 18
gcdlcm(a, b)
gcdlcm <- function(a, b) {
an <- c()
bn <- c()
for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i) }
gcd <- ifelse(length(an) <= length(bn), max(subset(an, an %in% bn)), max(subset(bn, bn %in% an)))
ad <- a/gcd
bd <- b/gcd
lcm <- ad*bd*maxn
return(c(gcd, lcm))
}
a <- 24
b <- 18
gcdlcm(a, b)
gcdlcm <- function(a, b) {
an <- c()
bn <- c()
for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i) }
gcd <- ifelse(length(an) <= length(bn), max(subset(an, an %in% bn)), max(subset(bn, bn %in% an)))
ad <- a/gcd
bd <- b/gcd
lcm <- ad*bd*gcd
return(c(gcd, lcm))
}
a <- 24
b <- 18
gcdlcm(a, b)
gcdlcm <- function(a, b) {
an <- c()
bn <- c()
for(i in 1:a) { if(a %% i == 0) an <- append(an, i) }
for(i in 1:b) { if(b %% i == 0) bn <- append(bn, i) }
gcd <- ifelse(length(an) <= length(bn), max(subset(an, an %in% bn)), max(subset(bn, bn %in% an)))
ad <- a/gcd
bd <- b/gcd
lcm <- ad*bd*gcd
return(c(gcd, lcm))
}
a <- 18
b <- 24
gcdlcm(a, b)
load("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02/data/data.rda")
character
# 2장
setwd("D:/Workspace-JWP/R_Data_Analysis/R-Statistics")
data <- read.csv("data/2010년 인구사항.csv", header=F, na.strings=c("."))
# 2장
setwd("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02")
data <- read.csv("data/2010년 인구사항.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor(data$V1, levels=c(1,2), labels = c("남자", "여자"))
data$V3 <- factor(data$V3, levels=1:14, labels=c("가구주", "가구주의 배우자", "자녀",
"자녀의 배우자", "가구주의 부모", "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모", "형제자매, 그 배우자",
"형제자매의 자녀, 그 배우자", "부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람"))
data$V4 <- factor(data$V4, levels=1:8, labels=c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정", "박사과정"))
str(data)
head(data)
save.image("data.rda")
load("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02/data.rda")
View(data)
View(data)
load("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02/data.rda")
load("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02/data/data.rda")
head(data)
# 1. 그래프
library(ggplot2)
cars
head(cars)
plot(cars$speed, cars$dist,
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
ggplot(cars, aes(x=speed, y=dist, col="red") + geom_dotplot()
ggplot(cars, aes(x=speed, y=dist, col="red")) + geom_dotplot()
ggplot(cars, aes(x=speed, y=dist, col="red")) + geom_dotplot()
ggplot(cars, aes(x=speed, y=dist, col="red")) + geom_dotplot(stat="identity")
head(cars)
ggplot(cars, aes(x=speed, y=dist)) + geom_dotplot(stat="identity")
ggplot(cars, aes(x=speed, y=dist)) + geom_dotplot()
ggplot(cars, aes(x=speed, y=dist)) + geom_dotplot(size=1)
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(cars$speed, cars$dist,
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(cars$speed, cars$dist,
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
par(mfrow=c(2,1))
plot(cars$speed, cars$dist,
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
ggplot(cars, aes(x=speed, y=dist, col="red")) + geom_jitter()
ggplot(cars, aes(x=speed, y=dist, col="red")) +
geom_jitter() +
theme_light()
ggplot(cars, aes(x=speed, y=dist, col="red")) +
geom_jitter() +
theme_bw()
ggplot(cars, aes(x=speed, y=dist, col="red")) +
geom_jitter() +
theme_light()
ggplot(cars, aes(x=speed, y=dist, col="red")) +
geom_jitter() +
theme_bw()
head(nile)
head(Nile)
Nile
class(Nile)
typeof(Nile)
Nile
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
par(mfrow=c(1,1))
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
plot(Nile, type="p", main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
ggplot(Nile, aes(x="")) +geom_point()
ggplot(Nile, aes(y="")) + geom_point()
plot.ts(Nile)
plot(Nile, type="p", main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
plot.ts(Nile)
plot(Nile)
plot.ts(Nile)
plot(Nile)
plot(Nile, type="p", main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
plot.ts(Nile)
plot(Nile)
ggplot(Nile, aes(x=Nile, y="")) + geom_point()
ggplot(Nile, aes()) + geom_point()
as.data.frame(Nile)
df_nile <- as.data.frame(Nile)
ggplot(df_nile, aes(x="")) + geom_point()
ggplot(df_nile, aes(x="", y=x)) + geom_point()
ggplot(df_nile, aes(y=x)) + geom_point()
Nile
df_nile <- data.frame(date=as.Date(index(Nile)), Y=Nile)
df_nile <- data.frame(date=time(Nile), Y=Nile)
df_nile
ggplot(df_nile, aes(x=date, y=Y)) + geom_point()
plot(Nile, type="p", main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
ggplot(df_nile, aes(x=date, y=Y)) + geom_point()
ggplot(df_nile, aes(x=date, y=Y)) + geom_point(col="red")
ggplot(df_nile, aes(x=date, y=Y)) +
geom_point(col="red") +
theme_bw()
plot.ts(Nile)
plot(Nile)
ggplot(df_nile, aes(x=date, y=Y)) +
geom_point(col="red") +
theme_bw()
df_nile
head(df_nile)
ggplot(df_nile, aes(x=date, y=Y)) +
geom_point(col="red") +
theme_bw() +
ggtitle("Nile강의 연도별 유량 변화") +
theme(plot.title = element_text(face="bold", size=14, hjust=0.5))
df_nile <- data.frame(year=time(Nile), Y=Nile)
head(df_nile)
ggplot(df_nile, aes(x=year, y=Y)) +
geom_point(col="red") +
theme_bw() +
ggtitle("Nile강의 연도별 유량 변화") +
theme(plot.title = element_text(face="bold", size=14, hjust=0.5))
df_nile <- data.frame(year=time(Nile), meter=Nile)
head(df_nile)
ggplot(df_nile, aes(x=year, y=meter)) +
geom_point(col="red") +
theme_bw() +
ggtitle("Nile강의 연도별 유량 변화") +
theme(plot.title = element_text(face="bold", size=14, hjust=0.5))
plot(Nile, type="p", main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량", col="red")
plot.ts(Nile)
plot(Nile)
ggplot(df_nile, aes(x=year, y=meter)) +
geom_line(col="red") +
theme_bw() +
ggtitle("Nile강의 연도별 유량 변화") +
theme(plot.title = element_text(face="bold", size=14, hjust=0.5))
tableV5 <- table(data$V5)
tableV5
barplot(tableV5, main="출생아 (남자)별 빈도", xlab="출생아수", ylab="빈도")
tableV1.V4 <- table(data$V1, data$V4)
tableV1.V4
data$V1
data$V4
tableV1.V4
barplot(tableV1.V4, legend.text = T, col=c("orange", "green"),
main="학력에 따른 성별 인원수", xlab="학력", ylab="빈도")
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도도")
data$V2
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(10))
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(20))
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(17))
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(19))
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, break=c(seq(0, 90, 10)), right=F,
main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, break=c(seq(0, 90, 10)), right=F, main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(7))
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(9))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포",
xlab="연령", ylab="빈도", col=rainbow(9))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포",
xlab="연령", ylab="빈도", col=rainbow(9))
hist(data$V2, probability = T, xlab="연령", ylab="밀도", col=rainbow(9))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, probability = T, xlab="연령", ylab="밀도", col=rainbow(9))
hist(data$V2, probability = T, xlab="연령", ylab="밀도", col=rainbow(18))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, probability = T, xlab="연령", ylab="밀도", col=rainbow(18))
hist(data$V2, probability = T, main="연령별 분포", xlab="연령", ylab="밀도", col=rainbow(18))
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, probability = T, main="연령별 분포", xlab="연령", ylab="밀도", col=rainbow(18))
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F, main="연령별 분포",
xlab="연령", ylab="빈도", col=rainbow(9))
# 히스토그램
par(mfrow=c(1,2))
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도", col=rainbow(18))
hist(data$V2, probability=T, main="연령별 분포", xlab="연령", ylab="밀도", col=rainbow(18))
# 원 도표
par(mfrow=c(1,1))
# 원 도표
pie(table(data$V4), main-"학력수준별 비중", cex=0.8)
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8)
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8, col=rainbow(10))
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8, col=rainbow(6))
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8, col=rainbow(7))
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8, col=rainbow(5))
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8, col=rainbow(6))
# 원 도표
pie(table(data$V4), main="학력수준별 비중", cex=0.8)
table(data$V4)
pie(table(data$V4), main="학력수준별 비중", cex=1)
pie(table(data$V4), main="학력수준별 비중", cex=1.2)
pie(table(data$V4), main="학력수준별 비중", cex=1)
# 모수와 통계량
setwd("D:\Workspace-JWP\R_Data_Analysis\R-Statistics\Chapter02")
# 모수와 통계량
setwd("D:/Workspace-JWP/R_Data_Analysis/R-Statistics/Chapter02")
ranicafe <- read.csv("data/cafedata.csv", stringsAsFactors = F)
head(ranicafe)
barplot(ranicafe$Coffees)
typeof(ranicafe$Coffees)
ranicafe <- read.csv("data/cafedata.csv")
head(ranicafe)
typeof(ranicafe$Coffees)
barplot(ranicafe$Coffees)
barplot(ranicafe$Coffees)
class(ranicafe$Coffees)
ranicafe$Coffees
as.numeric(ranicafe$Coffees)
a <- as.numeric(ranicafe$Coffees)
barplot(a)
table(a)
barplot(table(a))
class(ranicafe$Coffees)
ranicafe$Coffees
max(ranicafe$Coffees)
max(as.integer(ranicafe$Coffees))
min(as.integer(ranicafe$Coffees)
min(as.integer(ranicafe$Coffees))
min(as.integer(ranicafe$Coffees))
sort(ranicafe$Coffees)
sort(ranicafe$Coffees, decreasing = T)
sort(ranicafe$Coffees, decreasing = T)[1]
str(ranicafe)
head(ranicafe)
summary(ranicafe)
dim(ranicafe)
sort(ranicafe$Coffees0
sort(ranicafe$Coffees)
sort(ranicafe$Coffees)
ranicafe <- read.csv("data/cafedata.csv", stringsAsFactors = F)
str(ranicafe)
head(ranicafe)
summary(ranicafe)
dim(ranicafe)
sort(ranicafe$Coffees)
sort(ranicafe$Coffees, decreasing = T)
sort(ranicafe$Coffees, decreasing = T)[1]
str(ranicafe)
sort(as.numeric(ranicafe$Coffees))
ranicafe$Coffees <- as.numeric(ranicafe$Coffees)
sort(ranicafe$Coffees)
sort(ranicafe$Coffees, decreasing = T)[1]
sort(ranicafe$Coffees)
sort(ranicafe$Coffees, decreasing = T)[1]
sort(ranicafe$Coffees)[1]
sort(ranicafe$Coffees, decreasing = T)[1]
min(ranicafe$Coffees)
max(ranicafe$Coffees)
max(ranicafe$Coffees)
min(ranicafe$Coffees)
min(ranicafe$Coffees, na.rm = T)
max(ranicafe$Coffees, na.rm = T)
stem(ranicafe$Coffees)
hist(ranicafe$Coffees)
# 줄기-잎 그림
hist(ranicafe$Coffees)
stem(ranicafe$Coffees)
# 평균, 중앙값
rc <- ranicafe$Coffees
weight <- 1/length(rc)
sum(rc * weight, na.rm = T)
mean(rc, na.rm = T)
sum(rc, na.rm = T) * weight
weight <- 1/length(rc, na.rm=T)
sum(rc, na.rm = T) * weight
mean(rc, na.rm = T)
# 평균, 중앙값
rc <- ranicafe$Coffees
weight <- 1/length(rc, na.rm=T)
sum(rc, na.rm = T) * weight
mean(rc, na.rm = T)
sum(rc, na.rm = T) * weight
mean(rc, na.rm = T)
# 평균, 중앙값
rc <- ranicafe$Coffees
weight <- 1 / (length(rc)-1) # NA 개수를 빼주어야 함
sum(rc, na.rm = T) * weight
mean(rc, na.rm = T)
length(!is.na(rc))
length(rc)
length(is.na(rc))
is.na(rc)
length(is.na(rc)==T)
length(is.na(rc)==F)
length(subset(rc, is.na(rc)))
length(subset(rc, !is.na(rc)))
weight <- 1 / length(subset(rc, !is.na(rc)))   # NA 개수를 빼주어야 함
sum(rc, na.rm = T) * weight    # 평균
mean(rc, na.rm = T)
rc[rc == max(rc)] <-480
mean(rc, na.rm = T)
max(rc)
rc[rc == max(rc, na.rm=T)] <-480
mean(rc, na.rm = T)
boxplot(rc)
boxplot(rc[rc<470])
weight <- 1 / length(rc[rc!=NA])
weight
rc[rc!=NA]
rc
rc[rc!=NA]
rc[rc==NA]
rc[rc < 470]
rc[rc != NA]
rc[rc == max(rc, na.rm=T)]
rc[rc == max(rc, na.rm=T)]
rc
mean(rc, na.rm = T)
boxplot(rc[rc<470])
median.idx <- length(subset(rc, !is.na(rc))) + 1 / 2
median.idx
sort(rc)[median.idx]
median.idx <- (length(subset(rc, !is.na(rc))) + 1) / 2
median.idx
sort(rc)[median.idx]
weight <- 1 / length(rc[!is.na(rc)])    # 왜 안되는지 ????????????????????
weight
weight <- 1 / length(!is.na(rc))    # 왜 안되는지 ????????????????????
weight
length(!is.na(rc))
length(rc[rc!=NA])
length(rc)
length(rc[rc!=NA])
length(rc[!is.na(rc)==T])
weight
sum(rc, na.rm = T) * weight    # 평균
mean(rc, na.rm = T)
rc[rc == max(rc, na.rm = T)] <-480
mean(rc, na.rm = T)
boxplot(rc[rc<470])
median.idx <- (length(subset(rc, !is.na(rc))) + 1) / 2   # 중앙값
median.idx
sort(rc)[median.idx]
median(rc)
median(rc, na.rm = T)
sort(rc)[median.idx]
rc[median.idx]
sort(rc)[median.idx]
median.idx
sort(rc)[median.idx]
median(rc, na.rm = T)
height <- c(164, 166, 168, 170, 172, 174, 176)
height.m <- mean(height)
height.dev <- height - height.m
sum(height.dev)
height.m
height.dev2 <- height.dev^2
sum(height.dev2)
mean(height.dev2)
height.dev
height.dev^2
mean(height.dev2)
sqrt(mean(height.dev2))
# 분산과 표준편차 구하기
var(height)
sd(height)
height.m <- mean(height)
height.m
height.dev
height.dev2
mean(height.dev2)    # 분산
# 표준편차 구하기
sqrt(mean(height.dev2))
# 분산과 표준편차 구하기
var(height)
sd(height)
# 사분위수 구하기
quantile(rc, na.rm=T)
qs <- quantile(rc, na.rm=T)
qs
qs[4] - qs[2]
IQR(rc, na.rm=T)
# 사분위수 구하기
quantile(rc, na.rm=T)
qs
qs[4] - qs[2]     # 3분위수 - 1분위수 -> IQR (Inter Quantile Range)
bp <- boxplot(rc, main="커피 판매량에 대한 상자도표", axes=F)
bp <- boxplot(rc, main="커피 판매량에 대한 상자도표", axes=F)
bp <- boxplot(rc[rc<470], main="커피 판매량에 대한 상자도표", axes=F)
# 평균, 중앙값
rc <- ranicafe$Coffees
bp <- boxplot(rc, main="커피 판매량에 대한 상자도표", axes=F)
rc[rc == max(rc, na.rm = T)]
mean(rc, na.rm = T)
sum(rc, na.rm = T) * weight    # 평균
rc[rc=="NA"]
rc[rc!="NA"]
rc[rc!="NA" & rc!=NA]
rc[rc!="NA"]
# 이상치(Outlier)
boxplot(cars)
# 이상치(Outlier)
boxplot(cars$dist)
qs <- quantile(cars$dist)
qs
iqr <- qs[4] - qs[2]
iqr
# 사분위수 구하기
quantile(rc, na.rm=T)
qs <- quantile(rc, na.rm=T)
qs
qs[4] - qs[2]     # 3분위수 - 1분위수 -> IQR (Inter Quantile Range)
qs[4] - qs[2]     # 3분위수 - 1분위수 -> IQR (Inter Quantile Range)
IQR(rc, na.rm=T)
iqr <- qs[4] - qs[2]
iqr
upper_limit <- qs[4] + (1.5 * iqr)
lower_limit <- qs[2] - (1.5 * iqr)
lower_limit; upper_limit
qs <- quantile(cars$dist)
qs
iqr <- qs[4] - qs[2]
iqr
upper_limit <- qs[4] + (1.5 * iqr)
lower_limit <- qs[2] - (1.5 * iqr)
lower_limit; upper_limit
cars$dist[cars$dist > upper_limit]
cars$dist[cars$dist < lower_limit]    # 이상치
